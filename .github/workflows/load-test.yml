name: load-test

on:
  pull_request:
    branches:
      - main
env:
  LANG: C.UTF-8

jobs:
  load-test:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Terraform init
        working-directory: ./terraform
        run: terraform init 

      - name: Terraform apply
        working-directory: ./terraform
        run: terraform apply -auto-approve

      - name: Wait for endpoints
        run: make wait-for-endpoint

      - name: Install k6
        run: make install-k6

      - name: Run load test
        id: run-load-test
        run: make run-k6

      - name: Get k6 results
        id: vars
        run: |
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "k6results<<$EOF" >> "$GITHUB_ENV"
          cat comment.txt >> "$GITHUB_ENV"
          echo "$EOF" >> "$GITHUB_ENV"

      - name: Install Prometheus
        run: make install-prometheus

      - name: Install metrics-server
        run: make metrics-server

      - name: Expose Prometheus
        run: prometheus-port-fwd
        
      - name: Get Prometheus results
        id: vars
        run: |
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "cpuresults<<$EOF" >> "$GITHUB_ENV"
          make get-cpu-usage >> "$GITHUB_ENV"
          echo "$EOF" >> "$GITHUB_ENV"
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "memoryresults<<$EOF" >> "$GITHUB_ENV"
          make get-memory-usage >> "$GITHUB_ENV"
          echo "$EOF" >> "$GITHUB_ENV"

      - name: Write load results as comment
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `### Load Test Results

                ${{env.k6results}}

              ### Resources consumption
              #### CPU

                ${{env.cpuresults}}

              #### Memory

                ${{env.memoryresults}}
              `
            })
        
      
